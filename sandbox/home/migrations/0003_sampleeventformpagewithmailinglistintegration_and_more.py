# Generated by Django 4.2.1 on 2023-05-23 11:44

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.contrib.forms.models


class Migration(migrations.Migration):
    dependencies = [
        ('home', '0002_create_homepage'),
    ]
    
    operations = [
        migrations.CreateModel(
            name='SampleEventFormPageWithMailingListIntegration',
            fields=[
                ('page_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='wagtailcore.page')),
                ('audience_list_id',
                 models.CharField(blank=True, help_text='Select MailChimp Audience to add users to', max_length=50,
                                  null=True, verbose_name='MailChimp Audience')),
                ('merge_fields_mapping', models.TextField(blank=True, null=True)),
                ('interest_categories', models.TextField(blank=True, null=True)),
                ('mailing_list_checkbox_label',
                 models.CharField(blank=True, max_length=200, verbose_name='Mailing list checkbox label')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.forms.models.FormMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='MailingListSubscribePage',
            fields=[
                ('page_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='wagtailcore.page')),
                ('list_id', models.CharField(help_text='Select MailChimp Audience to use for this form', max_length=50,
                                             verbose_name='MailChimp Audience')),
                ('double_optin', models.BooleanField(default=False,
                                                     help_text='Check to use double opt-in process for new subscribers. If enabled, users must confirm their subscription via an email sent by MailChimp',
                                                     verbose_name='Double Opt-In')),
                ('thank_you_text',
                 models.TextField(blank=True, help_text='Message to show on successful submission', null=True,
                                  verbose_name='Thank you text')),
                ('success_redirect_page', models.ForeignKey(blank=True,
                                                            help_text='Page to redirect to after successful submission.Leave unselected to show this page with an empty form',
                                                            null=True, on_delete=django.db.models.deletion.SET_NULL,
                                                            related_name='+', to='wagtailcore.page',
                                                            verbose_name='Success Redirect Page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='FormField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('clean_name', models.CharField(blank=True, default='',
                                                help_text='Safe name of the form field, the label converted to ascii_snake_case',
                                                max_length=255, verbose_name='name')),
                ('label',
                 models.CharField(help_text='The label of the form field', max_length=255, verbose_name='label')),
                ('field_type', models.CharField(
                    choices=[('singleline', 'Single line text'), ('multiline', 'Multi-line text'), ('email', 'Email'),
                             ('number', 'Number'), ('url', 'URL'), ('checkbox', 'Checkbox'),
                             ('checkboxes', 'Checkboxes'), ('dropdown', 'Drop down'),
                             ('multiselect', 'Multiple select'), ('radio', 'Radio buttons'), ('date', 'Date'),
                             ('datetime', 'Date/time'), ('hidden', 'Hidden field')], max_length=16,
                    verbose_name='field type')),
                ('required', models.BooleanField(default=True, verbose_name='required')),
                ('choices', models.TextField(blank=True,
                                             help_text='Comma or new line separated list of choices. Only applicable in checkboxes, radio and dropdown.',
                                             verbose_name='choices')),
                ('default_value', models.TextField(blank=True,
                                                   help_text='Default value. Comma or new line separated values supported for checkboxes.',
                                                   verbose_name='default value')),
                ('help_text', models.CharField(blank=True, max_length=255, verbose_name='help text')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE,
                                                         related_name='form_fields',
                                                         to='home.sampleeventformpagewithmailinglistintegration')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
    ]
